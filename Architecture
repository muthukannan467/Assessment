Architecture Diagram:

+-------------------+         +-------------------+         +-----------------+         +-------------------+
|  PostgreSQL DB    |         | Google Cloud      |         | REST API         |         | MySQL Database    |
|  (User Transactions)|       | Storage (Web Logs)|         | (Product/Inventory) |      | (Web Registrations)|
+-------------------+         +-------------------+         +-----------------+         +-------------------+
         |                           |                           |                             |
         V                           V                           V                             V
+-------------------+         +-------------------+         +-----------------+         +-------------------+
|  Data Collection  |         |  Data Collection  |         | Data Collection |         | Data Collection   |
|  (Python Scripts) |         |  (Python Scripts) |         | (Python Scripts)|         | (Python Scripts)  |
+-------------------+         +-------------------+         +-----------------+         +-------------------+
         |                           |                           |                             |
         V                           V                           V                             V
+---------------------------------------------------------------------------------------------------+
|                                        Data Processing                                          |
|                                      (Python + Pandas)                                          |
|  Clean, Validate, Transform, Harmonize, Enrich Data                                             |
+---------------------------------------------------------------------------------------------------+
                            |
                            V
+-------------------+           +----------------------------+
| Data Quality      |           |        Data Storage         |
| Monitoring        |           |  (Google BigQuery)          |
| (Metrics, Latency)|           +----------------------------+
+-------------------+                     |
                            |
                            V
+-----------------------------+
|   Data Orchestration (Airflow)  |
|   - Schedule & Monitor Jobs     |
|   - Error Handling & Alerting   |
+-----------------------------+



Explanation of the Data Pipeline Architecture Diagram

1. Data Collection
Components:

>>>> PostgreSQL DB (User Transactions)
Purpose: Stores transactional data related to user activities.
Collection Method: Data is extracted using Python scripts that connect to the PostgreSQL database, query the necessary tables, and retrieve the required records.

>>>> Google Cloud Storage (Web Logs)
Purpose: Stores raw web logs generated by user interactions with the website.
Collection Method: Python scripts interact with Google Cloud Storage to download and read log files, which are stored in a CSV or similar format.

>>>> REST API (Product/Inventory Data)
Purpose: Provides data on products and inventory status.
Collection Method: Python scripts make HTTP requests to the REST API endpoints to fetch JSON or XML data, which is then processed into a DataFrame.

>>>> MySQL Database (Web Registrations)
Purpose: Contains data on user registrations from the web platform.
Collection Method: Python scripts connect to the MySQL database, execute SQL queries to fetch registration records, and convert them into a DataFrame.

Diagram:
+-------------------+         +-------------------+         +-----------------+         +-------------------+
|  PostgreSQL DB    |         | Google Cloud      |         | REST API         |         | MySQL Database    |
|  (User Transactions)|       | Storage (Web Logs)|         | (Product/Inventory) |       | (Web Registrations)|
+-------------------+         +-------------------+         +-----------------+         +-------------------+
         |                           |                           |                             |
         V                           V                           V                             V
+-------------------+         +-------------------+         +-----------------+         +-------------------+
|  Data Collection  |         |  Data Collection  |         | Data Collection |         | Data Collection   |
|  (Python Scripts) |         |  (Python Scripts) |         | (Python Scripts)|         | (Python Scripts)  |
+-------------------+         +-------------------+         +-----------------+         +-------------------+

2. Data Processing
Component:

Data Processing (Python + Pandas)
>> Purpose: Handles the cleaning, validation, transformation, harmonization, and enrichment of data from various sources.
Operations:
>> Clean: Remove duplicates, handle missing values.
>> Validate: Ensure data integrity and correctness.
>> Transform: Convert data into a consistent format.
>> Harmonize: Merge data from different sources (e.g., combining web and WhatsApp registrations to identify the same user).
>> Enrich: Join datasets (e.g., combining user transactions with product details).
Diagram:
